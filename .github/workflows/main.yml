name: CI

env:
  RUST_BACKTRACE: 1

jobs:
  test:
    name: cargo test
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { toolchain: stable, target: i686-pc-windows-msvc, os: windows-latest }
        - { toolchain: stable, target: i686-unknown-linux-gnu, os: ubuntu-latest }
        - { toolchain: stable, target: x86_64-apple-darwin, os: macos-latest }
        - { toolchain: stable, target: x86_64-pc-windows-msvc, os: windows-latest }
        - { toolchain: stable, target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
        - { toolchain: beta, target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
        - { toolchain: nightly, target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
    runs-on: ${{ matrix.platform.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.platform.toolchain }}
        targets: ${{ matrix.platform.target }}
    - uses: actions-rs/cargo@v1
      with:
        toolchain: ${{ matrix.platform.toolchain }}
        command: test
        args: --all --locked

  minimal-versions:
    name: cargo build -z minimal-versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
    - uses: actions-rs/cargo@v1
      with:
        toolchain: nightly
        command: update
        args: -Z minimal-versions
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all --locked

  update:
    name: cargo build --update
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
    - uses: actions-rs/cargo@v1
      with:
        command: update
        args: --aggressive
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all --locked

  wasm32:
    name: cargo build --target wasm32-unknown-unknown
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with: { targets: wasm32-unknown-unknown }
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --target wasm32-unknown-unknown --locked

  fmt:
    name: cargo fmt --check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with: { components: rustfmt }
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with: { components: clippy }
    - uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all --all-targets --locked -- -D warnings

  codecov:
    name: codecov
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: actions-rs/tarpaulin@v0.1
      with:
        args: '-- --skip proptest::'
    - uses: codecov/codecov-action@v1

on:
  push:
    branches: [staging, trying]
  pull_request:
    branches: [master]
  schedule:
  - cron: '0 0 */7 * *'
